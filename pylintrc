[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Profiled execution.
profile=no

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS

# Pickle collected data for later comparisons.
persistent=no

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=


[MESSAGES CONTROL]

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time. See also the "--disable" option for examples.
#enable=

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"
# C0103: Invalid name
# C0111: Missing docstring (happens way too often)
# C0301: Line too long (happens way too often)
# C0325: Unnecessary parens after
# C0330: Conditional 8-space hanging indent
# C0412: ungrouped-imports (not reliable)
# C0413: wrong-import-position
# E1101: has no member (not reliable)
# F0401: Unable to import (not reliable)
# W0142: Used * or ** magic
# W0201: Attribute defined outside __init__
# W0212: Access to protected member
# W0221: arguments-differ
# W0223: Method in abstract class is not overwritten (not reliable)
# W0232: Class has no __init__ method
# W0402: Uses a deprecated module (not reliable)
# W0511: fixme
# W0603: Using global statement
# W0613: Unused argument (unused arguements when subclassing)
# W0702: No exception type(s) specified
# W0703: Catching too general exception  (exception catching has legit uses)
# W1113: keyword-arg-before-vararg (order of arguments matters)
# R0201: Method could be a function (or not)
# R0204: redefined-variable-type (triggers on None to other types)
# R0401: cyclic-import (misfires for local imports)
# R0901: Too many ancestors (can have many mixins and still be ok)
# R0912: Too many branches (mockups have many branches)
# R0913: Too many arguments
# R0915: Too many statements (mockups have many statements)
# pointless-string-statement (used for comments)
# import-outside-toplevel
# redefined-builtin
# super-init-not-called

disable=C0103,C0111,C0301,C0325,C0330,C0412,C0413,E1101,F0401,W0142,W0201,
        W0212,arguments-differ,W0223,W0232,W0402,W0603,W0613,W0703,
        keyword-arg-before-vararg,R0201,R0204,cyclic-import,R0901,R0912,R0913,
        R0915,similarities,fixme,import-outside-toplevel,
        pointless-string-statement,bare-except,redefined-builtin,
        too-many-public-methods,too-many-locals,line-too-long,import-error,
        missing-module-docstring

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html. You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=colorized

# Include message's id in output
include-ids=yes

# Include symbolic ids of messages in output
symbols=yes

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells whether to display a full report or only the messages
reports=no

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Add a comment according to your evaluation note. This is used by the global
# evaluation report (RP0004).
comment=no


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set).
ignored-classes=SQLObject

# When zope mode is activated, add a predefined set of Zope acquired attributes
# to generated-members.
zope=no

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed. Python regular
# expressions are accepted.
# Defaults to REQUEST,acl_users,aq_parent
generated-members=REQUEST,acl_users,aq_parent


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=yes


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=80

# Maximum number of lines in a module
max-module-lines=4000

# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='    '


[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=yes

# A regular expression matching the beginning of the name of dummy variables
# (i.e. not used).
dummy-variables-rgx=_|dummy|mocked_

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=


[BASIC]

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input

# Regular expression which should only match correct module names
# module-rgx=(([a-z_][a-z0-9_]{2,30})|([A-Z][a-zA-Z0-9]+))$
module-rgx=([a-z_][a-z0-9_]{2,30})$

# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression which should only match correct class names
class-rgx=[A-Z_][a-zA-Z0-9]{2,30}$

# Regular expression which should only match correct function names
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct method names
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[a-z_][A-Za-z0-9_]{0,30}$

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,l,n,x,ex,Run,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Regular expression which should only match functions or classes name which do
# not require a docstring
#no-docstring-rgx=__.*__
no-docstring-rgx=.+


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,string,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=

extension-pkg-whitelist=lxml

# Force import order to recognize a module as part of a third party library.
known-third-party=avro,pytest,pandas,mock,requests_mock,celery,django,unicodecsv,isodate,paramiko,sqlalchemy,lxml,Cryptodome,confluent_kafka,docutils,portalocker,html2text,freezegun,jwcrypto,defusedxml

[DESIGN]

# Maximum number of arguments for function / method
max-args=12

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=43

# Maximum number of return / yield for function / method body
max-returns=15

# Maximum number of boolean expressions in an if statement (see R0916).
max-bool-expr=6

# Maximum number of branch for function / method body
max-branchs=25

# Maximum number of statements in function / method body
max-statements=70

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=32

# Minimum number of public methods for a class (see R0903).
min-public-methods=0

# Maximum number of public methods for a class (see R0904).
max-public-methods=30


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught.
# Defaults to "Exception"
overgeneral-exceptions=Exception


[REFACTORING]

# Maximum number of nested blocks for function / method body
max-nested-blocks=9
