;; N'affiche pas la toolbar
(tool-bar-mode nil)
;; N'affiche pas le menu
(menu-bar-mode nil)

;; Affiche l'heure
(setq display-time-24h-format)
;;(display-time)

;; Couleurs pour la prog
(global-font-lock-mode)
(setq font-lock-maximum-decoration t)

;; Info perso
(setq mail-host-address "epita.fr")
(setq user-mail-address "deiana_a@epita.fr")
(setq user-full-name "Deiana Alessio")

;; Scripts
(setq load-path (cons "~/.emacs.d/" load-path))
(load "std.el")
(load "std_comment.el")
(load "tiger.el")
;(load "c-font-lock-keywords.el")
;;(load "colors.el")
(load "hideshow.el")

;; Coloration syntaxique pour le caml
(setq load-path (cons "/u/a1/deiana_a/tuareg-mode-1.41.5" load-path))
(setq auto-mode-alist (cons '("\\.ml\\w?" . tuareg-mode) auto-mode-alist))
(autoload 'tuareg-mode "tuareg" "Major mode for editing Caml code" t)
(autoload 'camldebug "camldebug" "Run the Caml debugger" t)

(if (and (boundp 'window-system) window-system)
    (when (string-match "XEmacs" emacs-version)
        (if (not (and (boundp 'mule-x-win-initted) mule-x-win-initted))
            (require 'sym-lock))
        (require 'font-lock)))

;; Coloration syntaxique pour le tiger
(require 'tiger)
(add-to-list 'auto-mode-alist '("\\.tig$" . tiger-mode))



;; Coloration syntaxique
;(require 'c-font-lock-keywords)

;; Pour avoir le numero de ligne du curseur
(line-number-mode t)

;; Pour avoir le numero de colonne du curseur
(column-number-mode t)

;; Affiche les espaces en fin de ligne
;;(setq-default show-trailing-whitespace t)

;; Change la police d'affichage
(setq default-frame-alist '((font . "-Adobe-Courier-Bold-R-Normal--17-120-100-100-M-100-ISO8859-1")
(height . 35)
(width . 80)))


(defun next-buffer ()
  "Switch to the next buffer in cyclic order."
  (interactive)
  (let ((buffer (current-buffer)))
    (switch-to-buffer (other-buffer buffer))
    (bury-buffer buffer)))
(defun prev-buffer ()
  "Switch to the previous buffer in cyclic order."
  (interactive)
  (let ((list (nreverse (buffer-list)))
  found)
    (while (and (not found) list)
      (let ((buffer (car list)))
      (if (and (not (get-buffer-window buffer))
           (not (string-match "\\`"(buffer-name buffer))))
               (setq found buffer)))
      (setq list (cdr list)))
    (switch-to-buffer found)))

(custom-set-variables
  ;; custom-set-variables was added by Custom -- don't edit or cut/paste it!
  ;; Your init file should contain only one such instance.
 '(backup-directory-alist (quote ((".*" . "~/backup"))))
 '(backward-delete-char-untabify-method nil)
 '(blink-cursor nil)
 '(browse-url-browser-function (quote browse-url-generic) t)
 '(browse-url-generic-program "mozilla" t)
 '(delete-selection-mode t nil (delsel))
 '(iswitchb-mode t nil (iswitchb))
 '(iswitchb-regexp t)
; '(normal-erase-is-backspace t)
 '(pc-select-override-scroll-error t)
 '(require-final-newline (quote ask))
 '(scroll-bar-mode nil)
 '(track-eol nil)
 '(transient-mark-mode t)
 '(uniquify-buffer-name-style (quote post-forward-angle-brackets) nil (uniquify)))


;(setq scroll-step 1)
;(setq next-screen-context-lines 1)

;; Key Bindings
(global-set-key [f5]            `recompile)
(global-set-key [f6]            `compile)
(global-set-key [f7]            `cvs-update)
(global-set-key [f8]            'gnus)
;; passe en mode accents 'e devient <E9>
(global-set-key [f9]            'iso-accents-mode)
;; Raccourcis pour le code folding
(global-set-key [f10]           'hs-hide-all)
(global-set-key [f11]           'hs-show-all)
(global-set-key [f12]           'hs-toggle-hiding)
;; deplacement rapide
(global-set-key [kp-divide]     "/")
(global-set-key "\M-g"          'goto-line)
(global-set-key [C-right]       'forward-word)
(global-set-key [C-left]        'backward-word)
(global-set-key [end]           'end-of-line)
(global-set-key [C-up]          'backward-paragraph)
(global-set-key [C-down]        'forward-paragraph)
(define-key global-map [?\C-x right] 'next-buffer)
(define-key global-map [?\C-x left] 'prev-buffer)
;(global-set-key [down]         'forward-line)
(global-set-key [delete]        'delete-char)

;(global-set-key "^D" 'backward-delete-char)
;; HOME et END sous Putty
(global-set-key "ESC[1~"                'beginning-of-line)
(global-set-key "ESC[4~"                'end-of-line)

;; Affiche la parenthese correspondante
(show-paren-mode t)

(set-cursor-color "blue")

;; retour a la ligne en cas de ligne depassant la taille de la fenetre.
(setq-default truncate-lines nil)

;; affiche un carre noir au lieu d'un beep
(setq visible-bell t)

;; Having accents in `no-window' mode (launch emacs -nw)
;; permet de voir les accents en mode console et notamment sous putty
;;(if (memq window-system '(nil))
;;    (progn
;;      (standard-display-european nil))
;;  )

(setq gnus-article-decode-charset 1)
(setq gnus-select-method `(nntp "news.epita.fr"))

;; Appearence
;;(set-background-color   "black")
;;(set-foreground-color   "white")


;; Efface les espaces en fin de ligne a la sauvegarde
(defun my-hook-save ()
  (cond ((not (eq major-mode 'message-mode)) (delete-trailing-whitespace))))
(add-hook 'write-file-hooks 'my-hook-save)

;; hideshow
(load-library "hideshow")

(add-hook 'c-mode-hook                 ; code folding for c files
          '(lambda () (hs-minor-mode 1)))
(add-hook 'c++-mode-hook               ; code folding for c++ files
          '(lambda () (hs-minor-mode 1)))


;; Correction d'orthographe
;;(require 'flyspell)
;;(add-hook 'text-mode-hook 'flyspell-mode)
;;
;;(custom-set-variables
;;   '(flyspell-dictionaries-that-consider-dash-as-word-delimiter (quote
;;         ("francais")))
;; Indentation qu'avec des tabs
; setq-default indent-tabs-mode nil)
; (setq-default tab-width 4)

;; Backup directories
(setq backup-directory "~/backup")

;;(require 'paren)

;; Scroll par ligne et non par acoup
(setq scroll-conservatively 100)

;; Unify accentued char on decoding/encoding
;(require 'ucs-tables)
;(unify-8859-on-decoding-mode t)
;(unify-8859-on-encoding-mode t)

;; Go into iso-accent-mode when editing mails and news.
(add-hook 'message-mode-hook 'iso-accents-mode)

;; Lang env for copy paste to/from other programs
;(iso-accents-mode t)

;;(set-input-method "latin-9-prefix")
(set-language-environment "latin-9")
(set-keyboard-coding-system 'iso-latin-9)
(set-terminal-coding-system 'iso-latin-9)
(set-selection-coding-system 'iso-latin-9)

;; (transient-mark-mode t)
